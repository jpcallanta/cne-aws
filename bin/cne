#!/usr/bin/env ruby

require 'cne_aws'

cne = CneAws.new

if ARGV[0].nil?
  puts "Usage: cne [instances|security|unhealthy|elbs|terminate|stop|reboot|list-stacks|scale]".colorize(:red)
  exit 1
end

case ARGV[0]
  when 'instances'
    if ARGV[1].nil? || ARGV[2].nil?
      puts "Usage: cne instances [appname] [environment]".colorize(:red)
      exit 1
    else
      cne.list_instances(ARGV[1], ARGV[2])
    end

  when 'security'
    if ARGV[1].nil?
      cne.list_security_groups('')
    else
      cne.list_security_groups(ARGV[1])
    end

  when 'unhealthy'
    cne.list_unhealthy_hosts

  when 'elbs'
    cne.display_all_elbs

  when 'terminate'
    if ARGV[1].nil?
      puts "Usage: cne terminate [instance_id]".colorize(:red)
      exit 1
    else
      cne.terminate_instance(ARGV[1])
    end

  when 'stop'
    if ARGV[1].nil?
      puts "Usage: cne stop [instance_id]".colorize(:red)
      exit 1
    else
      cne.stop_instance(ARGV[1])
    end

  when 'reboot'
    if ARGV[1].nil?
      puts "Usage: cne reboot [instance_id]".colorize(:red)
      exit 1
    else
      cne.reboot_instance(ARGV[1])
    end

  when 'list-stacks'
    cne.list_all_stacks

  when 'scale'
    if ARGV[1].nil? || ARGV[2].nil? || ARGV[3].nil?
      puts "Usage: cne scale-up [stackname] [desired_capacity] [max_capacity]".colorize(:red)
      exit 1
    else
      cne.scale(ARGV[1], ARGV[2], ARGV[3])
    end
end
